net {
  type = mainnet
  #type = testnet
}
storage {
  # Directory for storing persistent data
  db.version = 2,
  db.engine = "LEVELDB",
  db.directory = "database",
  index.directory = "index",
  index.switch = "on",
  # You can custom these 14 databases’ configs:
  transHistory.switch = "on",
  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.
  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").
  # Attention: name is a required field that must be set !!!
  properties = [
    //  {
    //   name = "account",
    //   path = "storage_directory_test",
    //   createIfMissing = true,
    //   paranoidChecks = true,
    //   verifyChecksums = true,
    //   compressionType = 0,
    //   blockSize = 10485760,
    //   writeBufferSize = 10485760,
    //   cacheSize = 0,
    //   maxOpenFiles = 32
    //  },
    //  {
    //   name = "account-index",
    //   path = "storage_directory_test",
    //   createIfMissing = true,
    //   paranoidChecks = true,
    //   verifyChecksums = true,
    //   compressionType = 0,
    //   blockSize = 10485760,
    //   writeBufferSize = 10485760,
    //   cacheSize = 0,
    //   maxOpenFiles = 32
    //  }
  ]
  //dbsettings is needed when using rocksdb as the storage implement (db.version=2 and db.engine="ROCKSDB").
  //we’d strongly recommend that do not modify it unless you know every item’s meaning clearly.
  dbSettings = {
    levelNumber = 7
    //compactThreads = 32
    blocksize = 64 // n * KB
    maxBytesForLevelBase = 256 // n * MB
    maxBytesForLevelMultiplier = 10
    level0FileNumCompactionTrigger = 4
    compressionTypeListStr = "no:no:lz4:lz4:lz4:zstd:zstd"
    targetFileSizeBase = 256 // n * MB
    targetFileSizeMultiplier = 1
  }
  //backup settings when using rocks db as the storage implement (db.version=2 and db.engine="ROCKSDB").
  //if you want to use the backup plugin, please confirm set the db.version=2 and db.engine="ROCKSDB" above.
  backup = {
    enable = true // indicate whether enable the backup plugin
    properties = "prop.properties" // record which bak directory is valid
    bak1path = "bak1/database" // you must set two backup directories to prevent application halt unexpected(e.g. kill -9).
    bak2path = "bak2/database"
    frequency = 1  // indicate backup db once every 10000 blocks processed.
  }
}
node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = null
}
node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:50051"
  fullNodeAllowShieldedTransaction = true
  zenTokenId=1000001
  # expose extension api to public or not
  walletExtensionApi = true
  http {
    fullNodePort = 50083
    fullNodeEnable = true
    solidityPort = 50084
    solidityEnable = true
    PBFTPort = 50085
    statisticsSRRewardSwitch = true
  }
  allowUsingZkProofStore = true
  listen.port = 50006
  rpc.port = 50080
  rpc.solidityPort = 50081
  rpc.PBFTPort = 50082
  rpc.minEffectiveConnection = 0
  # Number of gRPC thread, default availableProcessors / 2
  # rpc.thread = 16
  connection.timeout = 2
  agreeNodeCount = 2
  tcpNettyWorkThreadNum = 0
  udpNettyWorkThreadNum = 1
  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16
  active = [
    # Initial active peers
    # Sample entries:
    "10.40.10.231:50000",
    "10.40.10.232:50000",
  ]
  maxActiveNodes = 30
  minParticipationRate = 0
  p2p {
    version = 103 # 32: testnet; 101: debug
  }
}
enery.limit.block.num = 0
seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #  "ip:port",
  #  "ip:port"
  # ]
  ip.list = [
    "101.200.46.37:50000",
    "39.106.145.222:50000",
  ]
}
genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Devaccount"
      accountType = "AssetIssue"
      # B48B69A638F365A52D4CB421710E66D5DEA826D6F713C3F7EACBD8E7AC07830D
      address = "TMrsWQBrKo2eB8WVuUyX2qnMQDVjB6xHED"
      balance = "10000000000000000"
    },
    {
      accountName = "Huzhenyuan"
      accountType = "AssetIssue"
      # BD20314C84412AEC414CA40DD3EB3D7A042057E3BB15792A0AFA1DF4DD94F553
      address = "TAkMvwVV7YfEEymVSP8y5e41bckH72o75d"
      balance = "10000000000000000"
    },
    {
      accountName = "Zion"
      accountType = "AssetIssue"
      # F520BE00C132963D1581818325B655DC80425918A8C4D4DA1BDE451A890E7818
      address = "TYpMmTuMQRdKuz1KXqgiimLmoB58TfGZco"
      balance = "15000000000000000"
    },
    {
      accountName = "Sun"
      accountType = "AssetIssue"
      # 9FD8E129DE181EA44C6129F727A6871440169568ADE002943EAD0E7A16D8EDAC
      address = "TT1smsmhxype64boboU8xTuNZVCKP1w6qT"
      balance = "10000000000000000"
    },
    {
      accountName = "testng001"
      accountType = "AssetIssue"
      # 8CB4480194192F30907E14B52498F594BD046E21D7C4D8FE866563A6760AC891
      address = "TKVyqEJaq8QRPQfWE8s8WPb5c92kanAdLo"
      balance = "10000000000000000"
    },
    {
      accountName = "testng002"
      accountType = "AssetIssue"
      # FC8BF0238748587B9617EB6D15D47A66C0E07C1A1959033CF249C6532DC29FE6
      address = "THph9K2M2nLvkianrMGswRhz5hjSA9fuH7"
      balance = "10000000000000000"
    },
    {
      accountName = "testng003"
      accountType = "AssetIssue"
      # 6815B367FDDE637E53E9ADC8E69424E07724333C9A2B973CFA469975E20753FC
      address = "TV75jZpdmP2juMe1dRwGrwpV6AMU6mr1EU"
      balance = "10000000000000000"
    },
    {
      accountName = "testng004"
      accountType = "AssetIssue"
      # 369F095838EB6EED45D4F6312AF962D5B9DE52927DA9F04174EE49F9AF54BC77
      address = "TB4B1RMhoPeivkj4Hebm6tttHjRY9yQFes"
      balance = "10000000000000000"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      #address = "27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3"
      address = "THmtHi1Rzq4gSKYGEKv1DPkV7au6xU1AUB"
      balance = "-9223372036854775808"
    },
    {
      accountName = "qwqw"
      accountType = "AssetIssue"
      address = "TH4ie122Eazv5TjmWEZzUUDPZVdkX8PQbg"
      balance = "123123333333"
    },
    {
      accountName = "qwqw"
      accountType = "AssetIssue"
      address = "TH4ie122Eazv5TjmWEZzUUDPZVdkX8PQbg"
      balance = "122121212"
    }
  ]
  witnesses = [
    {
      #address: 27QAUYjg5FXfxcvyHcWF3Aokd5eu9iYgs1c
      address: TB4B1RMhoPeivkj4Hebm6tttHjRY9yQFes
      url = "http://Mercury.org",
      voteCount = 105
    },
    {
      #address: 27g8BKC65R7qsnEr2vf7R2Nm7MQfvuJ7im4
      address: TT1smsmhxype64boboU8xTuNZVCKP1w6qT
      url = "http://Venus.org",
      voteCount = 104
    },
    #  {
    #   #address: 27Uoo1DVmYT1fFYPdnTtueyqHkjR3DaDjwo
    #   address: TFhVTuBQ6JzRZN9QTcFdb4yYxowReY8K15
    #   url = "http://Earth.org",
    #   voteCount = 103
    #  },
    #  {
    #   #address: 27mEGtrpetip67KuXHFShryhGWd8nbSfLRW
    #   address: TY7yMYWHSanrR9fHxPoRo4qXihfB6YXzJJ
    #   url = "http://Mars.org",
    #   voteCount = 102
    #  },
    #  {
    #   #address: 27jvZ4iJ7LQ8UP3VKPGQLp3oj7c7jFf6Q32
    #   address: TWpFXPyjtG7EgsF64Qm4k8wzKge7hRZp6A
    #   url = "http://Jupiter.org",
    #   voteCount = 101
    #  }
  ]
  timestamp = "0" #2017-8-26 12:00:00
  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
}
localwitness = [
]
block = {
  needSyncCheck = true # first node : false, other : true
  maintenanceTimeInterval = 300000 // 1 day: 86400000(ms), 6 hours: 21600000(ms)
  proposalExpireTime = 300000
  checkFrozenTime = 0
}
vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 10.0
  saveInternalTx = true
}
committee = {
  allowMultiSign = 1
  allowAdaptiveEnergy = 0
  allowCreationOfContracts = 1 //mainnet:0 (reset by committee),test:1
  allowDelegateResource = 1
  allowSameTokenName = 1
  allowTvmTransferTrc10 = 1
  allowCreationOfContracts = 1
  #allowDeferredTransaction = 1
  allowProtoFilterNum = 1
  allowTvmConstantinople = 1
  allowAccountStateRoot = 1
  allowShieldedTransaction = 1
  allowTvmSolidity059 = 1
  changedDelegation = 1
  forbidTransferToContract = 1
  # allowPBFT = 1
}
event.subscribe = {
  #native = {
  # useNativeQueue = true // if true, use native message queue, else use event plugin.
  # bindport = 50070 // bind port
  # sendqueuelength = 1000 //max length of send queue
  #}
  path = "/data/java-tron-solidity/plugin-kafka-1.0.0.zip" // absolute path of plugin
  server = "127.0.0.1:9092" // target server address to receive event triggers
  dbconfig="" // dbname|username|password
  contractParse = true,
  topics = [
    {
      triggerName = "block" // block trigger, the value can’t be modified
      enable = true
      topic = "block" // plugin topic, the value could be modified
    },
    {
      triggerName = "transaction"
      enable = true
      topic = "transaction"
    },
    {
      triggerName = "contractevent"
      enable = true
      topic = "contractevent"
    },
    {
      triggerName = "contractlog"
      enable = true
      topic = "contractlog"
    },
    {
      triggerName = "solidityevent"
      enable = true
      topic = "solidityevent"
    },
    {
      triggerName = "soliditylog"
      enable = true
      topic = "soliditylog"
    }
  ]
  filter = {
    fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
    toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
    contractAddress = [
      "" // contract address you want to subscribe, if it’s set to "", you will receive contract logs/events with any contract address.
    ]
    contractTopic = [
      "" // contract topic you want to subscribe, if it’s set to "", you will receive contract logs/events with any contract topic.
    ]
  }
}